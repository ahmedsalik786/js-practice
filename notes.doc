What is the distinction between client-side and server-side JavaScript?
Client-side JavaScript is made up of two parts, a fundamental language and predefined objects for performing JavaScript in a browser. JavaScript for the client is automatically included in the HTML pages. At runtime, the browser understands this script.

What is a Temporal Dead Zone?
Temporal Dead Zone is a behaviour that occurs with variables declared using let and const keywords. It is a behaviour where we try to access a variable before it is initialized.

//What does it mean when we say JavaScript is single-threaded?
//It means that the main thread where JavaScript code is run, runs in one line at a time manner and there is no possibility of running code in parallel.

//How do Event loops work?
//Call Stack:JavaScript uses a call stack to keep track of the currently executing function (where the program is in its execution).

//Callback Queue:Asynchronous operations, such as I/O operations or timers, are handled by the browser or Node.js runtime. When these operations are complete, corresponding functions (callbacks) are placed in the callback queue.

//Event Loop:The event loop continuously checks the call stack and the callback queue. If the call stack is empty, it takes the first function from the callback queue and pushes it onto the call stack for execution.

//Execution:The function on top of the call stack is executed. If this function contains asynchronous code, it might initiate further asynchronous operations.

//Callback Execution:When an asynchronous operation is complete, its callback is placed in the callback queue.

//Repeat:The event loop continues this process, ensuring that the call stack is always empty before taking the next function from the callback queue.
